
2020-09-03 10:23:20
TypeError("Field 'autoid' expected a number but got <menu.controllers.menu.Menu object at 0x00000262DD7970D0>.")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1774, in get_prep_value
    return int(value)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'Menu'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\labrecord\models\labmodel.py", line 16, in get_labrecord
    res = Labrecords.objects.filter(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 942, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 962, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 969, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1358, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1377, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1319, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1165, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 24, in __init__
    self.rhs = self.get_prep_lookup()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 74, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1776, in get_prep_value
    raise e.__class__(
TypeError: Field 'autoid' expected a number but got <menu.controllers.menu.Menu object at 0x00000262DD7970D0>.

获取检验记录时出错
chkid
args=["chkname", "checkamount", "caunit", "samplesource", "applyerid", "applyername", "applydate", "sampleamount", "sampleunit"]
kwargs={"autoid": null}
--------------------
2020-09-03 15:56:08
FieldError("Cannot resolve keyword 'executetime' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutedate, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executedate, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plandate, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, version, warrantdate, warrantorid, warrantorname, workshopid, workshopname")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1863, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1565, in setup_joins
    path, final_field, targets, rest = self.names_to_path(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1481, in names_to_path
    raise FieldError("Cannot resolve keyword '%s' into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'executetime' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutedate, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executedate, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plandate, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, version, warrantdate, warrantorid, warrantorname, workshopid, workshopname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\product\models\productmodel.py", line 125, in get_producingplan
    return res.values(*args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 841, in values
    clone = self._values(*fields, **expressions)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 836, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 2172, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1885, in add_fields
    raise FieldError("Cannot resolve keyword %r into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'executetime' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutedate, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executedate, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plandate, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, version, warrantdate, warrantorid, warrantorname, workshopid, workshopname

ProductModel-get_producing获取批记录信息时出错
autoid
args=["prodid", "prodname", "commonname", "batchno", "spec", "package", "medkind", "planamount", "mpunit", "instructorid", "instructorname", "plandate", "realamount", "makedate", "qaauditorid", "qaauditorname", "qadate", "executorid", "executorname", "executetime", "linename", "workshopid", "workshopname"]
kwargs={"status": 0}
--------------------