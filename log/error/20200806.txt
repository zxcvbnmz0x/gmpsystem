
2020-08-06 10:49:30
FieldError("Cannot resolve keyword 'detail' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname")
Traceback (most recent call last):
  File "d:\pyproject\GMPsystem\product\models\productmodel.py", line 151, in get_producingplan
    return Producingplan.objects.filter(**kwargs)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 904, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 923, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1351, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1382, in _add_q
    check_filterable=check_filterable,
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1251, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1088, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1484, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'detail' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

ProductModel-get_producing获取批记录信息时出错
kwargs={"autoid": "3", "detail": 1}
--------------------
2020-08-06 14:35:45
FieldError("Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1866, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1568, in setup_joins
    names[:pivot], opts, allow_many, fail_on_missing=True,
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1484, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "d:\pyproject\GMPsystem\product\models\productmodel.py", line 125, in get_producingplan
    return res.values(*args)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 809, in values
    clone = self._values(*fields, **expressions)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 804, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 2146, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1889, in add_fields
    "Choices are: %s" % (name, ", ".join(names)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

ProductModel-get_producing获取批记录信息时出错
realamount
args=["basic", "spec", "basicamount", "spamount", "bpamount", "bpamount"]
kwargs={"autoid": 565}
--------------------
2020-08-06 14:36:18
FieldError("Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1866, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1568, in setup_joins
    names[:pivot], opts, allow_many, fail_on_missing=True,
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1484, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "d:\pyproject\GMPsystem\product\models\productmodel.py", line 125, in get_producingplan
    return res.values(*args)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 809, in values
    clone = self._values(*fields, **expressions)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 804, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 2146, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1889, in add_fields
    "Choices are: %s" % (name, ", ".join(names)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

ProductModel-get_producing获取批记录信息时出错
realamount
args=["basic", "spec", "basicamount", "spamount", "bpamount", "bpamount"]
kwargs={"autoid": 36}
--------------------
2020-08-06 14:36:58
FieldError("Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1866, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1568, in setup_joins
    names[:pivot], opts, allow_many, fail_on_missing=True,
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1484, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "d:\pyproject\GMPsystem\product\models\productmodel.py", line 125, in get_producingplan
    return res.values(*args)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 809, in values
    clone = self._values(*fields, **expressions)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 804, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 2146, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1889, in add_fields
    "Choices are: %s" % (name, ", ".join(names)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

ProductModel-get_producing获取批记录信息时出错
realamount
args=["basic", "spec", "basicamount", "spamount", "bpamount", "bpamount"]
kwargs={"autoid": 36}
--------------------
2020-08-06 14:49:53
FieldError("Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1866, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1568, in setup_joins
    names[:pivot], opts, allow_many, fail_on_missing=True,
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1484, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "d:\pyproject\GMPsystem\product\models\productmodel.py", line 126, in get_producingplan
    return res.values(*args)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 809, in values
    clone = self._values(*fields, **expressions)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 804, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 2146, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1889, in add_fields
    "Choices are: %s" % (name, ", ".join(names)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

ProductModel-get_producing获取批记录信息时出错
realamount
args=["basic", "spec", "basicamount", "spamount", "bpamount", "bpamount"]
kwargs={"autoid": 36}
--------------------
2020-08-06 14:51:01
FieldError("Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1866, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1568, in setup_joins
    names[:pivot], opts, allow_many, fail_on_missing=True,
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1484, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "d:\pyproject\GMPsystem\product\models\productmodel.py", line 126, in get_producingplan
    return res.values(*args)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 809, in values
    clone = self._values(*fields, **expressions)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 804, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 2146, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1889, in add_fields
    "Choices are: %s" % (name, ", ".join(names)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

ProductModel-get_producing获取批记录信息时出错
realamount
args=["basic", "spec", "basicamount", "spamount", "bpamount", "bpamount"]
kwargs={"autoid": 36}
--------------------
2020-08-06 14:51:47
FieldError("Cannot resolve keyword 'plamount' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1866, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1568, in setup_joins
    names[:pivot], opts, allow_many, fail_on_missing=True,
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1484, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'plamount' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "d:\pyproject\GMPsystem\product\models\productmodel.py", line 126, in get_producingplan
    return res.values(*args)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 809, in values
    clone = self._values(*fields, **expressions)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 804, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 2146, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1889, in add_fields
    "Choices are: %s" % (name, ", ".join(names)))
django.core.exceptions.FieldError: Cannot resolve keyword 'plamount' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

ProductModel-get_producing获取批记录信息时出错
plamount
args=["realamount", "basic", "spec", "basicamount", "spamount", "bpamount", "bpamount"]
kwargs={"autoid": 36}
--------------------
2020-08-06 14:53:21
FieldError("Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1866, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1568, in setup_joins
    names[:pivot], opts, allow_many, fail_on_missing=True,
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1484, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "d:\pyproject\GMPsystem\product\models\productmodel.py", line 126, in get_producingplan
    return res.values(*args)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 809, in values
    clone = self._values(*fields, **expressions)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\query.py", line 804, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 2146, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\lib\site-packages\django\db\models\sql\query.py", line 1889, in add_fields
    "Choices are: %s" % (name, ", ".join(names)))
django.core.exceptions.FieldError: Cannot resolve keyword 'basic' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutetime, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executetime, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plantime, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, warrantdate, warrantorid, warrantorname, workshopid, workshopname

ProductModel-get_producing获取批记录信息时出错
planamount
args=["realamount", "basic", "spec", "basicamount", "spamount", "bpamount", "bpamount"]
kwargs={"autoid": 36}
--------------------