
2020-10-20 13:35:04
TypeError("Field 'autoid' expected a number but got <sale.modules.saleorderlistmodule.SaleOrderListModule object at 0x000002404D1B7160>.")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1774, in get_prep_value
    return int(value)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'SaleOrderListModule'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\sale\models\salemodel.py", line 61, in get_salenotes
    res = Salesnotes.objects.filter(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 942, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 962, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 969, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1358, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1377, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1319, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1165, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 24, in __init__
    self.rhs = self.get_prep_lookup()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 74, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1776, in get_prep_value
    raise e.__class__(
TypeError: Field 'autoid' expected a number but got <sale.modules.saleorderlistmodule.SaleOrderListModule object at 0x000002404D1B7160>.

获取销售订单信息时出错
autoid
args=["paperno", "clientid", "clientname", "saledate", "deliverydate", "deliveryplace", "conveyance", "paymethod", "remark", "linkman", "telno"]
kwargs={"autoid": null}
--------------------
2020-10-20 16:29:12
IntegrityError(1048, "Column 'status' cannot be null")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'status' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\warehouse\models\warehousemodel.py", line 132, in update_productputoutpaper
    return Productputoutpaper.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1395, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.IntegrityError: (1048, "Column 'status' cannot be null")

更新产品出库单时出错
kwargs={"snid": 35, "pokind": "销售出库", "clientid": "Z003", "clientname": "新兴化药综合制剂车间成品仓3", "remark": "98"}
--------------------
2020-10-20 16:31:19
IntegrityError(1048, "Column 'status' cannot be null")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'status' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\warehouse\models\warehousemodel.py", line 132, in update_productputoutpaper
    return Productputoutpaper.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1395, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.IntegrityError: (1048, "Column 'status' cannot be null")

更新产品出库单时出错
kwargs={"snid": 35, "pokind": "销售出库", "clientid": "Z003", "clientname": "新兴化药综合制剂车间成品仓3", "remark": "98"}
--------------------
2020-10-20 16:32:26
IntegrityError(1048, "Column 'status' cannot be null")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'status' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\warehouse\models\warehousemodel.py", line 132, in update_productputoutpaper
    return Productputoutpaper.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1395, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.IntegrityError: (1048, "Column 'status' cannot be null")

更新产品出库单时出错
kwargs={"snid": 35, "pokind": "销售出库", "clientid": "Z003", "clientname": "新兴化药综合制剂车间成品仓3", "remark": "98"}
--------------------
2020-10-20 16:38:33
IntegrityError(1048, "Column 'status' cannot be null")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'status' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\warehouse\models\warehousemodel.py", line 132, in update_productputoutpaper
    return Productputoutpaper.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1395, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.IntegrityError: (1048, "Column 'status' cannot be null")

更新产品出库单时出错
kwargs={"snid": 35, "snpaperno": "00002", "pokind": "销售出库", "clientid": "Z003", "clientname": "新兴化药综合制剂车间成品仓3", "remark": "98"}
--------------------
2020-10-20 16:39:09
IntegrityError(1048, "Column 'status' cannot be null")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'status' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\warehouse\models\warehousemodel.py", line 132, in update_productputoutpaper
    return Productputoutpaper.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1395, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.IntegrityError: (1048, "Column 'status' cannot be null")

更新产品出库单时出错
kwargs={"snid": 35, "snpaperno": "00002", "pokind": "销售出库", "clientid": "Z003", "clientname": "新兴化药综合制剂车间成品仓3", "remark": "98"}
--------------------
2020-10-20 16:39:28
IntegrityError(1048, "Column 'QRFLAG' cannot be null")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'QRFLAG' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\warehouse\models\warehousemodel.py", line 132, in update_productputoutpaper
    return Productputoutpaper.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1395, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.IntegrityError: (1048, "Column 'QRFLAG' cannot be null")

更新产品出库单时出错
kwargs={"snid": 35, "snpaperno": "00002", "pokind": "销售出库", "clientid": "Z003", "clientname": "新兴化药综合制剂车间成品仓3", "remark": "98"}
--------------------
2020-10-20 16:40:59
TypeError("Field 'ppopid' expected a number but got {'autoid': 52}.")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1774, in get_prep_value
    return int(value)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'dict'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\warehouse\models\warehousemodel.py", line 206, in get_ppopqrcode
    res = Ppopqrcode.objects.filter(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 942, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 962, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 969, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1358, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1377, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1319, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1165, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 24, in __init__
    self.rhs = self.get_prep_lookup()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 74, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1776, in get_prep_value
    raise e.__class__(
TypeError: Field 'ppopid' expected a number but got {'autoid': 52}.

获取产品出库二维码信息时出错
qrcode
kwargs={"ppopid": {"autoid": 52}}
--------------------
2020-10-20 16:42:36
TypeError("Field 'ppopid' expected a number but got {'autoid': 52}.")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1774, in get_prep_value
    return int(value)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'dict'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\warehouse\models\warehousemodel.py", line 206, in get_ppopqrcode
    res = Ppopqrcode.objects.filter(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 942, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 962, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 969, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1358, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1377, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1319, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1165, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 24, in __init__
    self.rhs = self.get_prep_lookup()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 74, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1776, in get_prep_value
    raise e.__class__(
TypeError: Field 'ppopid' expected a number but got {'autoid': 52}.

获取产品出库二维码信息时出错
qr0
kwargs={"ppopid": {"autoid": 52}}
--------------------