
2020-09-11 14:28:15
ValidationError(['“0000-00-00” value has the correct format (YYYY-MM-DD) but it is an invalid date.'])
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1179, in to_python
    parsed = parse_date(value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\utils\dateparse.py", line 78, in parse_date
    return datetime.date(**kw)
ValueError: year 0 is out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\product\models\productmodel.py", line 218, in update_oddmentdrawnotes
    return Oddmentdrawnotes.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1394, in execute_sql
    for sql, params in self.as_sql():
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1337, in as_sql
    value_rows = [
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1338, in <listcomp>
    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1338, in <listcomp>
    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1279, in prepare_value
    value = field.get_db_prep_save(value, connection=self.connection)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 823, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "D:\pyproject\gmpsystem\db\models.py", line 35, in get_db_prep_value
    value = self.get_prep_value(value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1217, in get_prep_value
    return self.to_python(value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1183, in to_python
    raise exceptions.ValidationError(
django.core.exceptions.ValidationError: ['“0000-00-00” value has the correct format (YYYY-MM-DD) but it is an invalid date.']

更新零头登记/发放记录出错
kwargs={"unit": "瓶", "regdate": null, "invaliddate": null, "amount": "55", "registerid": "001", "registername": "sys02", "ppid": 77, "batchno": "02", "makedate": "0000-00-00"}
--------------------
2020-09-11 14:28:16
ValidationError(['“0000-00-00” value has the correct format (YYYY-MM-DD) but it is an invalid date.'])
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1179, in to_python
    parsed = parse_date(value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\utils\dateparse.py", line 78, in parse_date
    return datetime.date(**kw)
ValueError: year 0 is out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\product\models\productmodel.py", line 218, in update_oddmentdrawnotes
    return Oddmentdrawnotes.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1394, in execute_sql
    for sql, params in self.as_sql():
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1337, in as_sql
    value_rows = [
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1338, in <listcomp>
    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1338, in <listcomp>
    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1279, in prepare_value
    value = field.get_db_prep_save(value, connection=self.connection)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 823, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "D:\pyproject\gmpsystem\db\models.py", line 35, in get_db_prep_value
    value = self.get_prep_value(value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1217, in get_prep_value
    return self.to_python(value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1183, in to_python
    raise exceptions.ValidationError(
django.core.exceptions.ValidationError: ['“0000-00-00” value has the correct format (YYYY-MM-DD) but it is an invalid date.']

更新零头登记/发放记录出错
kwargs={"unit": "瓶", "regdate": null, "invaliddate": null, "amount": "55", "registerid": "001", "registername": "sys02", "ppid": 77, "batchno": "02", "makedate": "0000-00-00"}
--------------------
2020-09-11 14:28:17
ValidationError(['“0000-00-00” value has the correct format (YYYY-MM-DD) but it is an invalid date.'])
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1179, in to_python
    parsed = parse_date(value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\utils\dateparse.py", line 78, in parse_date
    return datetime.date(**kw)
ValueError: year 0 is out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\product\models\productmodel.py", line 218, in update_oddmentdrawnotes
    return Oddmentdrawnotes.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1394, in execute_sql
    for sql, params in self.as_sql():
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1337, in as_sql
    value_rows = [
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1338, in <listcomp>
    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1338, in <listcomp>
    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1279, in prepare_value
    value = field.get_db_prep_save(value, connection=self.connection)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 823, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "D:\pyproject\gmpsystem\db\models.py", line 35, in get_db_prep_value
    value = self.get_prep_value(value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1217, in get_prep_value
    return self.to_python(value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1183, in to_python
    raise exceptions.ValidationError(
django.core.exceptions.ValidationError: ['“0000-00-00” value has the correct format (YYYY-MM-DD) but it is an invalid date.']

更新零头登记/发放记录出错
kwargs={"unit": "瓶", "regdate": null, "invaliddate": null, "amount": "55", "registerid": "001", "registername": "sys02", "ppid": 77, "batchno": "02", "makedate": "0000-00-00"}
--------------------
2020-09-11 15:45:01
FieldError("Cannot resolve keyword 'papertype' into field. Choices are: applydate, applydeptid, applydeptname, applyerid, applyername, applyremark, autoid, batchno, caunit, checkamount, checkerid, checkername, checkgist, chkid, chkname, ciid, conclusion, createdate, expireddate, ittype, labtype, mbatchno, nosub, package, paperno, paperstatus, producer, remark, reportdate, reportdeptid, reportdeptname, reporterid, reportername, result, sampleamount, sampledate, samplerid, samplername, samplesource, sampleunit, seqid, spec, status, supplyer, warehousemanid, warehousemanname, warrantorid, warrantorname")
Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\labrecord\models\labmodel.py", line 16, in get_labrecord
    res = Labrecords.objects.filter(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 942, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 962, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 969, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1358, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1377, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1258, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1084, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1481, in names_to_path
    raise FieldError("Cannot resolve keyword '%s' into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'papertype' into field. Choices are: applydate, applydeptid, applydeptname, applyerid, applyername, applyremark, autoid, batchno, caunit, checkamount, checkerid, checkername, checkgist, chkid, chkname, ciid, conclusion, createdate, expireddate, ittype, labtype, mbatchno, nosub, package, paperno, paperstatus, producer, remark, reportdate, reportdeptid, reportdeptname, reporterid, reportername, result, sampleamount, sampledate, samplerid, samplername, samplesource, sampleunit, seqid, spec, status, supplyer, warehousemanid, warehousemanname, warrantorid, warrantorname

获取检验记录时出错
paperno
args=["status"]
kwargs={"papertype": 3, "ciid": 77}
--------------------
2020-09-11 16:11:31
FieldError("Cannot resolve keyword 'w' into field. Choices are: autoid, chargerid, chargername, dpamount, dpdate, dpdepositorid, dpdepositorname, dpposition, dpremark, dpstatus, dpwarehousemanid, dpwarehousemanname, hxamount, oddment, packamount, piamount, piapplyerid, piapplyername, pidate, piqaid, piqaname, piremark, pistatus, pltype, position, ppid, qrflag, unittype, warehouseid, warehousemanid, warehousemanname, warehousename")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1863, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1565, in setup_joins
    path, final_field, targets, rest = self.names_to_path(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1481, in names_to_path
    raise FieldError("Cannot resolve keyword '%s' into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'w' into field. Choices are: autoid, chargerid, chargername, dpamount, dpdate, dpdepositorid, dpdepositorname, dpposition, dpremark, dpstatus, dpwarehousemanid, dpwarehousemanname, hxamount, oddment, packamount, piamount, piapplyerid, piapplyername, pidate, piqaid, piqaname, piremark, pistatus, pltype, position, ppid, qrflag, unittype, warehouseid, warehousemanid, warehousemanname, warehousename

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\workshop\models\workshopmodels.py", line 40, in get_productputinnote
    return res.values_list(*args, flat=flat)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 868, in values_list
    clone = self._values(*_fields, **expressions)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 836, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 2172, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1885, in add_fields
    raise FieldError("Cannot resolve keyword %r into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'w' into field. Choices are: autoid, chargerid, chargername, dpamount, dpdate, dpdepositorid, dpdepositorname, dpposition, dpremark, dpstatus, dpwarehousemanid, dpwarehousemanname, hxamount, oddment, packamount, piamount, piapplyerid, piapplyername, pidate, piqaid, piqaname, piremark, pistatus, pltype, position, ppid, qrflag, unittype, warehouseid, warehousemanid, warehousemanname, warehousename

获取产品入库信息时出错
w
args=["a", "r", "e", "h", "o", "u", "s", "e", "i", "d"]
kwargs={"ppid": 77}
--------------------
2020-09-11 16:12:31
AttributeError("'dict' object has no attribute 'split'")
Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\workshop\models\workshopmodels.py", line 42, in get_productputinnote
    return res.values(*args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 841, in values
    clone = self._values(*fields, **expressions)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 836, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 2172, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1863, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
AttributeError: 'dict' object has no attribute 'split'

获取产品入库信息时出错
dpposition
args=["position", {"warehouseid": "314"}]
--------------------
2020-09-11 16:36:19
FieldError("Cannot resolve keyword 'mpuint' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutedate, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executedate, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plandate, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, version, warrantdate, warrantorid, warrantorname, workshopid, workshopname")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1863, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1565, in setup_joins
    path, final_field, targets, rest = self.names_to_path(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1481, in names_to_path
    raise FieldError("Cannot resolve keyword '%s' into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'mpuint' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutedate, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executedate, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plandate, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, version, warrantdate, warrantorid, warrantorname, workshopid, workshopname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\product\models\productmodel.py", line 126, in get_producingplan
    return res.values(*args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 841, in values
    clone = self._values(*fields, **expressions)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 836, in _values
    clone.query.set_values(fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 2172, in set_values
    self.add_fields(field_names, True)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1885, in add_fields
    raise FieldError("Cannot resolve keyword %r into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'mpuint' into field. Choices are: allowno, autoid, basicamount, basicunit, batchno, bpamount, bpconsdate, bpconstitutorid, bpconstitutorname, bpdate, bpexecutedate, bpexecutorid, bpexecutorname, bpqadate, bpqaid, bpqaname, bpunit, bpwarrantdate, bpwarrantorid, bpwarrantorname, commonname, daykind, deptid, deptname, executedate, executorid, executorname, expireddates, hpunit, instructorid, instructorname, labelimgid, lineid, linename, makedate, medkind, midstatus, mpamount, mpunit, package, planamount, plandate, plflag, pltype, prodid, prodname, prodstatus, productgist, qaauditorid, qaauditorname, qadate, realamount, remark, spamount, spec, spprice, spunit, status, statustime, version, warrantdate, warrantorid, warrantorname, workshopid, workshopname

ProductModel-get_producing获取批记录信息时出错
prodid
args=["prodname", "spec", "package", "bpamount", "bpunit", "mpamount", "mpuint", "spamount", "spunit"]
kwargs={"autoid": 77}
--------------------