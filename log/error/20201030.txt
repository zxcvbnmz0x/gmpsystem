
2020-10-30 08:54:58
TypeError("object of type 'int' has no len()")
Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 93, in update_data
    elif len(condition):
TypeError: object of type 'int' has no len()

更新设备信息
kwargs={"eqid": "13ⅡA-0021", "serialno": "1", "spec": "FZB型1", "price": "25万", "manufacturer": "广州越兴兄弟包装有限公司1", "makedate": "1905-07-031", "indate": "1905-07-031", "eqtype": 1, "instposition": "成品仓库1", "parameter": "捆包速度：1.5秒/次1", "performance": "1", "deptid": "123", "deptname": "456"}
--------------------
2020-10-30 08:57:38
TypeError("object of type 'int' has no len()")
Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 93, in update_data
    elif len(condition):
TypeError: object of type 'int' has no len()

更新设备信息
kwargs={"eqid": "13ⅡA-0021"}
--------------------
2020-10-30 08:59:08
TypeError("object of type 'int' has no len()")
Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 93, in update_data
    elif len(condition):
TypeError: object of type 'int' has no len()

更新设备信息
kwargs={"eqid": "13ⅡA-0021"}
--------------------
2020-10-30 09:01:50
FieldDoesNotExist("Equipments has no field named 'eqid'")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\options.py", line 575, in get_field
    return self.fields_map[field_name]
KeyError: 'eqid'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 94, in update_data
    return table.objects.filter(**condition).update(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 780, in update
    query.add_update_values(kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\subqueries.py", line 85, in add_update_values
    field = self.get_meta().get_field(name)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\options.py", line 577, in get_field
    raise FieldDoesNotExist("%s has no field named '%s'" % (self.object_name, field_name))
django.core.exceptions.FieldDoesNotExist: Equipments has no field named 'eqid'

更新设备信息
kwargs={"eqid": "13ⅡA-00223"}
--------------------
2020-10-30 09:07:52
TypeError("object of type 'NoneType' has no len()")
Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 93, in update_data
    elif len(condition):
TypeError: object of type 'NoneType' has no len()

更新设备信息
kwargs={"eqno": "454", "eqname": "456", "serialno": "456", "spec": "45", "price": "6456", "manufacturer": "465", "makedate": "46", "indate": "546", "eqtype": 2, "instposition": "456", "parameter": "789", "performance": "456", "deptid": "123", "deptname": "456", "maintainerid": "9645", "maintainername": "杨素贞", "remark": "465", "status": 1}
--------------------
2020-10-30 09:10:15
IntegrityError(1048, "Column 'EqType' cannot be null")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'EqType' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 96, in update_data
    return table.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1395, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.IntegrityError: (1048, "Column 'EqType' cannot be null")

更新设备信息
kwargs={"eqno": "1234"}
--------------------
2020-10-30 10:28:25
IntegrityError(1062, "Duplicate entry '456' for key 'EqNo'")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '456' for key 'EqNo'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 96, in update_data
    return table.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1395, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.IntegrityError: (1062, "Duplicate entry '456' for key 'EqNo'")

更新设备信息
kwargs={"eqno": "456", "deptid": "0345", "deptname": "asd"}
--------------------
2020-10-30 10:29:31
IntegrityError(1062, "Duplicate entry '456' for key 'EqNo'")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '456' for key 'EqNo'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 96, in update_data
    return table.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1395, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.IntegrityError: (1062, "Duplicate entry '456' for key 'EqNo'")

更新设备信息
kwargs={"eqno": "456", "deptid": "0345", "deptname": "asd"}
--------------------
2020-10-30 15:15:50
IntegrityError(1062, "Duplicate entry '0' for key 'PRIMARY'")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '0' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 96, in update_data
    return table.objects.create(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 750, in save
    self.save_base(using=using, force_insert=force_insert,
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 787, in save_base
    updated = self._save_table(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 892, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\base.py", line 930, in _do_insert
    return manager._insert(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 1249, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\compiler.py", line 1395, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\backends\mysql\base.py", line 74, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.IntegrityError: (1062, "Duplicate entry '0' for key 'PRIMARY'")

更新设备校验记录
kwargs={"checkdate": null, "company": "456", "status": 1, "registerid": "001", "registername": "sys02", "eqid": 0}
--------------------
2020-10-30 15:37:49
TypeError("Field 'autoid' expected a number but got <built-in function id>.")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1774, in get_prep_value
    return int(value)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'builtin_function_or_method'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 73, in get_data
    res = table.objects.filter(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 942, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 962, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 969, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1358, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1377, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1319, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1165, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 24, in __init__
    self.rhs = self.get_prep_lookup()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 74, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1776, in get_prep_value
    raise e.__class__(
TypeError: Field 'autoid' expected a number but got <built-in function id>.

查询设备校验记录
autoid
args=["checkdate", "company", "result", "registerid", "registername"]
kwargs={"autoid": null}
--------------------
2020-10-30 15:38:12
TypeError("Field 'autoid' expected a number but got <built-in function id>.")
Traceback (most recent call last):
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1774, in get_prep_value
    return int(value)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'builtin_function_or_method'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pyproject\gmpsystem\equipment\models\equipmentmodel.py", line 73, in get_data
    res = table.objects.filter(**kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 942, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 962, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, *args, **kwargs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\query.py", line 969, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1358, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1377, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1319, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\sql\query.py", line 1165, in build_lookup
    lookup = lookup_class(lhs, rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 24, in __init__
    self.rhs = self.get_prep_lookup()
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\lookups.py", line 74, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "D:\Anaconda3\envs\py3.8.5\lib\site-packages\django\db\models\fields\__init__.py", line 1776, in get_prep_value
    raise e.__class__(
TypeError: Field 'autoid' expected a number but got <built-in function id>.

查询设备校验记录
autoid
args=["checkdate", "company", "result", "registerid", "registername"]
kwargs={"autoid": null}
--------------------