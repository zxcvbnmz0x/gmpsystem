#���ò�Ʒ�ֵ�
ALTER TABLE `productdictionary`
MODIFY COLUMN `autoid`  int(11) NOT NULL AUTO_INCREMENT FIRST ,
MODIFY COLUMN `InputCode`  varchar(60) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `ProdName`;

#��������ָ���Ĭ��ֵ
ALTER TABLE `producingplan`
MODIFY COLUMN `spec`  varchar(200) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `CommonName`,
MODIFY COLUMN `PlanAmount`  decimal(10,2) NOT NULL DEFAULT 0 AFTER `ProductGist`,
MODIFY COLUMN `RealAmount`  decimal(10,2) NOT NULL DEFAULT 0 AFTER `PlanTime`,
MODIFY COLUMN `status`  int(11) NOT NULL DEFAULT 0 AFTER `StatusTime`,
MODIFY COLUMN `MidStatus`  int(11) NOT NULL DEFAULT 0 AFTER `status`,
MODIFY COLUMN `ProdStatus`  int(11) NOT NULL DEFAULT 0 AFTER `MidStatus`,
MODIFY COLUMN `plType`  int(11) NOT NULL DEFAULT 0 AFTER `bpDate`,
MODIFY COLUMN `bpExecutorID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `plType`,
MODIFY COLUMN `bpExecutorName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `bpExecutorID`,
MODIFY COLUMN `bpExecuteTime`  datetime NOT NULL DEFAULT '0000-00-00 00:00:00' AFTER `bpExecutorName`,
MODIFY COLUMN `hpUnit`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `bpExecuteTime`,
MODIFY COLUMN `bpAmount`  int(11) NOT NULL DEFAULT 0 AFTER `hpUnit`,
MODIFY COLUMN `DayKind`  tinyint(4) NOT NULL DEFAULT 0 AFTER `bpAmount`,
MODIFY COLUMN `plflag`  int(11) NOT NULL DEFAULT 0 AFTER `DayKind`,
AUTO_INCREMENT=4;


#��������ָ��
delimiter $$
CREATE FUNCTION createproducingplan(flag int, id varchar(40)) RETURNS int(11)
begin
if flag=0
then
insert into producingplan (prodid,prodname,commonname,spec,medkind,package,allowno,bpunit,mpunit,spunit,mpamount,spamount,basicamount,basicunit,lineid,expireddates) 
				    select prodid,prodname,commonname,spec,medkind,package,allowno,bpunit,mpunit,spunit,mpamount,spamount,basicamount,basicunit,plid,expireddates from productdictionary where autoid = id;
elseif flag = 1
then
insert into producingplan (prodid,prodname,commonname,spec,medkind,package,allowno,bpunit,mpunit,spunit,mpamount,spamount,basucamount,basicunit,lineid,expireddates) select prodid,prodname,kind,spec,'ǰ����',package,allowno,bpunit,mpunit,spunit,mpamount,spamount,basicamount,basicunit,plid,expireddays from productdictionary where autoid = id;
else
return 0;
end if;
select last_insert_id() into @autoid;
update producingplan as pp, productline as pl set pp.linename=pl.linename,pp.workshopid=pl.deptid,pp.workshopname=pl.deptname  where pp.autoid = @autoid and pp.lineid = pl.autoid;
return @autoid;
end$$
delimiter ;

#�����������������ϲֺͳ�Ʒ��
ALTER TABLE `productline`
ADD COLUMN `StuffWorkshopID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `plflag`,
ADD COLUMN `ProductWorkshopID`  varchar(10) CHARACTER SET gbk NOT NULL DEFAULT '' AFTER `StuffWorkshopID`;

#������������
ALTER TABLE `department`
ADD INDEX `DeptID` (`DeptID`) USING BTREE ;

#�м��Ʒ���鵥��Ÿĵ�-17��ԭ�����峡�ϸ�֤����������-17����ʼ������-1
update postdocument set docid=docid-1 where docid<=-17;
update postdocument set docid=-17 where docid = -31;
update linepostdocumentset docid=docid-1 where docid<=-17;
update linepostdocumentset set docid=-17 where docid = -31;
update labrecords set labtype = labtype+1 where labtype>=4;
update labrecords set labtype = 4 where labtype>=10;

#���¼����¼
ALTER TABLE `labrecords`
MODIFY COLUMN `LabType`  int(11) NOT NULL AFTER `autoid`,
MODIFY COLUMN `BatchNo`  varchar(50) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `PaperNo`,
MODIFY COLUMN `mBatchNo`  varchar(50) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `BatchNo`,
MODIFY COLUMN `spec`  varchar(200) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `chkName`,
MODIFY COLUMN `producer`  varchar(60) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `Package`,
MODIFY COLUMN `status`  int(11) NOT NULL DEFAULT 0 AFTER `ExpiredDate`,
MODIFY COLUMN `PaperType`  int(11) NOT NULL DEFAULT 0 AFTER `status`,
MODIFY COLUMN `NoSub`  tinyint(4) NOT NULL DEFAULT 0 AFTER `SeqID`,
MODIFY COLUMN `itType`  int(11) NOT NULL DEFAULT '-1' AFTER `NoSub`;

#��λ���������
ALTER TABLE `linepost`
ADD INDEX `roomname` (`RoomName`) USING BTREE ;
MODIFY COLUMN `SeqID`  int(11) NOT NULL DEFAULT 0 AFTER `ppID`,
MODIFY COLUMN `status`  int(11) NOT NULL DEFAULT 0 AFTER `Humidity`;




# ���������ĵ�
delimiter $$
drop procedure if exists startproducingplan$$
CREATE procedure startproducingplan(id varchar(40))
begin
declare done,lid,workid,seid,opt,exdays,sid,postid,docid_var,did,wid,i int default 0;
declare prodid_var,proddeptid, proddeptname,stuffdeptid,stuffdeptname, prodname_var , batchno_var , spec_var , package_var,pname,rname varchar(40) default '';

declare fname varchar(50);
# ��λ�α�
declare poname cursor for (select 

autoid,SeqID,PostName,RoomName,Options,ExpiredDays from workflow where plid = lid);
# ��λ�ĵ��α�
declare 

document cursor for (select SeqID,DocID from postdocument where wfID = workid);
declare continue handler for not found set done=1;
SELECT 
    prodid, prodname, batchno, spec, package, lineid
INTO prodid_var , 

prodname_var , batchno_var , spec_var , package_var, lid FROM
    producingplan
WHERE
    autoid = id;
    
SELECT 
    pl.ProductWorkshopID, dp.DeptName
INTO proddeptid , proddeptname FROM
    productline AS pl,
    department 

AS dp
WHERE
    pl.ProductWorkshopID = dp.deptid
        AND pl.autoid = lid;

SELECT 
    pl.StuffWorkshopID, 

dp.DeptName
INTO stuffdeptid , stuffdeptname FROM
    productline AS pl,
    department AS dp
WHERE
    

pl.StuffWorkshopID = dp.deptid
        AND pl.autoid = lid;

open poname;

createpost:loop
	fetch poname into 

workid,seid,pname,rname,opt,exdays;
	if done = 1 then
		leave createpost;
	end if;
    

insert into linepost (ppid,SeqID,PostName,RoomName,Options,ExpiredDays) values 

(id,seid,pname,rname,opt,exdays);
	select last_insert_id() into postid;
    open document;
    

createdocument:loop
		fetch document into sid,docid_var;
		if done = 1 then leave createdocument;
		end if;
        if docid_var > 0 then
			insert into 

forms (Format,sdfID) select Format,autoid from selfdefinedformat where autoid = 

docid_var;

set fname = (select formatname from selfdefinedformat where autoid = docid_var);
            SELECT LAST_INSERT_ID() INTO did;
			insert into linepostdocument

(lpID,SeqID,DocID,formatname) values(postid,sid,did,fname);
            iterate createdocument;
		elseif docid_var in 

(-2,-3,-4) then
			insert into stuffdrawpaper (PaperType,ppID,DeptID,DeptName,sdpType) values

(abs(docid_var)-2,id,stuffdeptid,stuffdeptname,1);
		elseif docid_var = -13 then
			

insert into productputinnotes (WarehouseID,WarehouseName,ppID,plType) VALUES (proddeptid,proddeptname,id,0);
	

	elseif docid_var = -14 then
			insert into productputinnotes 

(WarehouseID,WarehouseName,ppID,plType) VALUES (stuffdeptid,stuffdeptname,id,1);
		elseif 

docid_var in (-15,-16,-17,-18) then
			insert into labrecords 

(LabType,chkID,chkName,BatchNo,ciID,Spec,Package) values (abs(docid_var)-

13,prodid_var,prodname_var,batchno_var,id,spec_var,package_var);
		elseif docid_var = -19 then
	

		
			insert into cleanconfirmity 

(ppID,lpID,SeqID,RoomName,LinePostName,LastProdID,LastProdName,LastBatchNo,ProdID,ProdName,BatchNo,CleanerID,

CleanerName,CleanDate,CheckerID,CheckerName,CheckDate,ValidDate,IsCopy,OrigID) 
            select 

id,lp.autoid,sid,rname,pname,cl.ProdID,cl.ProdName,cl.BatchNo,prodid_var,prodname_var,batchno_var,cl.CleanerI

D,cl.CleanerName,cl.CleanDate,cl.CheckerID,cl.CheckerName,cl.CheckDate,cl.ValidDate,1,cl.autoid from 

cleanconfirmity as cl,linepost as lp where cl.lpid=lp.autoid and lp.roomname=rname and lp.status = 2 order by 

lp.starttime desc limit 1;
		elseif docid_var = -20 then
			insert into 

cleanconfirmity (ppID,lpID,SeqID,RoomName,LinePostName,ProdID,ProdName,BatchNO,IsCopy) 
            select 

id,lp.autoid,sid,rname,pname,prodid_var,prodname_var,batchno_var,0 from cleanconfirmity as cl,linepost as lp 

where cl.lpid=lp.autoid and lp.roomname=rname and lp.status = 2 order by lp.starttime desc limit 1;
		

else
			insert into linepostdocument(lpID,SeqID,DocID) values(postid,sid,docid_var);
          

  iterate createdocument;
		end if;
		SELECT LAST_INSERT_ID() INTO did;
		

insert into linepostdocument(lpID,SeqID,DocID,aid) values(postid,sid,docid_var,did);
	end loop 

createdocument;
    close document;
    set done = 0;
end loop createpost;
close poname;
end$$
delimiter ;

ALTER TABLE `linepostdocument`
ADD COLUMN `formatname`  varchar(50) NOT NULL DEFAULT '' AFTER `aid`;


ALTER TABLE `workerpost`
ADD COLUMN `SeqID`  tinyint NOT NULL AFTER `plID`;

ALTER TABLE `workflow`
DROP INDEX `pp` ,
ADD UNIQUE INDEX `pp` (`plID`, `SeqID`, `PostName`) USING BTREE ;

ALTER TABLE `workflow`
ADD COLUMN `SpareRoom`  varchar(200) NOT NULL DEFAULT '' AFTER `ExpiredDays`;

ALTER TABLE `equipments`
MODIFY COLUMN `autoid`  int(11) NOT NULL AUTO_INCREMENT FIRST ;

ALTER TABLE `eqrunnotes`
MODIFY COLUMN `RunStartTime`  datetime NOT NULL AFTER `FillTime`,
MODIFY COLUMN `Remark`  varchar(60) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `RunStatus`,
MODIFY COLUMN `Maintenance`  int(11) NOT NULL DEFAULT 0 AFTER `PostName`,
AUTO_INCREMENT=41309;

ALTER TABLE `eqrunnotes`
MODIFY COLUMN `RunStartTime`  datetime NOT NULL DEFAULT '0000-00-00 00:00:00' AFTER `FillTime`,
MODIFY COLUMN `RunEndTime`  datetime NOT NULL DEFAULT '0000-00-00 00:00:00' AFTER `lpID`;
MODIFY COLUMN `StartStatus`  tinyint(4) NOT NULL DEFAULT 0 AFTER `Maintenance`,
MODIFY COLUMN `StopStatus`  tinyint(4) NOT NULL DEFAULT 0 AFTER `StartStatus`;

ALTER TABLE `productstuff`
MODIFY COLUMN `impurity`  decimal(8,2) NOT NULL COMMENT '����' AFTER `wdName`,
ADD COLUMN `rDensity`  decimal(12,4) NOT NULL COMMENT '����ܶ�' AFTER `impurity`;

ALTER TABLE `stuffrepository`
MODIFY COLUMN `rDensity`  decimal(12,4) NOT NULL COMMENT '����ܶ�' AFTER `source`,
MODIFY COLUMN `impurity`  decimal(8,2) NOT NULL COMMENT '����' AFTER `rDensity`;


ALTER TABLE `productstuff`
ADD COLUMN `cUnit`  varchar(20) NOT NULL DEFAULT '' AFTER `Content`;
MODIFY COLUMN `Water`  decimal(6,2) NOT NULL DEFAULT 0.000 AFTER `cUnit`;

ALTER TABLE `planprescription`
ADD COLUMN `formula`  varchar(200) NOT NULL DEFAULT '' AFTER `amount`;
ADD COLUMN `expression`  varchar(200) NOT NULL DEFAULT '' AFTER `formula`;

ALTER TABLE `productprescription`
ADD COLUMN `formula`  varchar(200) NOT NULL DEFAULT '' AFTER `amount`;
ADD COLUMN `expression`  varchar(200) NOT NULL DEFAULT '' AFTER `formula`;

ALTER TABLE `stuffrepository`
ADD COLUMN `SupId`  varchar(10) NOT NULL DEFAULT '' AFTER `Producer`,

ALTER TABLE `planprescription`
CHANGE COLUMN `expression` `PresExpression`  varchar(200) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `formula`,
ADD COLUMN `PracExpression`  varchar(200) NOT NULL DEFAULT '' AFTER `PresExpression`,
ADD COLUMN `DrawExpression`  varchar(200) NOT NULL DEFAULT '' AFTER `PracExpression`;

ALTER TABLE `productprescription`
CHANGE COLUMN `expression` `PresExpression`  varchar(200) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `formula`,
ADD COLUMN `Version`  varchar(20) NOT NULL DEFAULT '' AFTER `ProdID`,
ADD COLUMN `PracExpression`  varchar(200) NOT NULL DEFAULT '' AFTER `PresExpression`,
ADD COLUMN `drawExpression`  varchar(200) NOT NULL DEFAULT '' AFTER `PracExpression`;

ALTER TABLE `productstuff`
ADD COLUMN `PracAmount`  decimal(10,3) NOT NULL AFTER `CheckAmount`;

ALTER TABLE `productstuff`
CHANGE COLUMN `Kind` `StuffKind`  varchar(100) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `StuffType`;



ALTER TABLE `producingplan`
ADD COLUMN `Version`  varchar(20) NOT NULL DEFAULT '' AFTER `CommonName`;

ALTER TABLE `productdictionary`
MODIFY COLUMN `CommonName`  varchar(60) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `ProdName`,
ADD COLUMN `Version`  varchar(20) NOT NULL DEFAULT '' AFTER `CommonName`;

ALTER TABLE `productstuff`
CHANGE COLUMN `fe` `precision`  integer NOT NULL DEFAULT 1 AFTER `mBatchNo`;

ALTER TABLE `productstuff`
MODIFY COLUMN `Price`  decimal(8,3) NOT NULL DEFAULT 0.000 AFTER `AllowNo`,
MODIFY COLUMN `Producer`  varchar(60) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `Price`,
MODIFY COLUMN `BatchNo`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `Producer`,
MODIFY COLUMN `lrID`  int(11) NOT NULL DEFAULT 0 AFTER `BatchNo`,
MODIFY COLUMN `Content`  decimal(6,3) NOT NULL DEFAULT 0.000 AFTER `lrID`,
MODIFY COLUMN `cUnit`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `Content`,
MODIFY COLUMN `Water`  decimal(6,2) NOT NULL DEFAULT 0.00 AFTER `cUnit`,
MODIFY COLUMN `PresAmount`  decimal(10,2) NOT NULL AFTER `Water`,
MODIFY COLUMN `PresUnit`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL AFTER `PresAmount`,
MODIFY COLUMN `CheckAmount`  decimal(10,3) NOT NULL DEFAULT 0.000 AFTER `PresUnit`,
MODIFY COLUMN `PracAmount`  decimal(10,3) NOT NULL AFTER `CheckAmount`,
MODIFY COLUMN `RealAmount`  decimal(10,3) NOT NULL DEFAULT 0.000 AFTER `PracAmount`,
MODIFY COLUMN `DrawAmount`  decimal(10,2) NOT NULL AFTER `RealAmount`;

ALTER TABLE `productstuff`
CHANGE COLUMN `Unit` `PracUnit`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `PracAmount`,
ADD COLUMN `DrawUnit`  varchar(20) NOT NULL DEFAULT '' AFTER `DrawAmount`;

ALTER TABLE `productprescription`
CHANGE COLUMN `Unit` `PresUnit`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL AFTER `PresExpression`,
CHANGE COLUMN `spUnit` `PracUnit`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL AFTER `PracExpression`,
CHANGE COLUMN `spAmount` `DrawUnit`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL AFTER `drawExpression`;

ALTER TABLE `productprescription`
CHANGE COLUMN `flag` `precision`  int(11) NOT NULL AFTER `IsMainAux`;


ALTER TABLE `labrecords`
MODIFY COLUMN `CreateTime`  datetime NOT NULL DEFAULT '0000-00-00 00:00:00' AFTER `ciID`,
MODIFY COLUMN `ApplyerID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `CreateTime`,
MODIFY COLUMN `ApplyTime`  datetime NOT NULL DEFAULT '0000-00-00 00:00:00' AFTER `ApplyerID`,
MODIFY COLUMN `ApplyerName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `ApplyTime`,
MODIFY COLUMN `ApplyDeptID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `ApplyerName`,
MODIFY COLUMN `ApplyDeptName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `ApplyDeptID`,
MODIFY COLUMN `SampleSource`  varchar(50) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `ApplyDeptName`,
MODIFY COLUMN `ApplyRemark`  varchar(100) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `SampleSource`,
MODIFY COLUMN `SampleCount`  decimal(10,4) NOT NULL DEFAULT 0.0000 AFTER `SamplerName`,
MODIFY COLUMN `SampleUnit`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `SampleCount`,
MODIFY COLUMN `SampleTime`  datetime NOT NULL DEFAULT '0000-00-00 00:00:00' AFTER `SampleUnit`,
MODIFY COLUMN `Remark`  varchar(100) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `SampleTime`;

ALTER TABLE `labrecords`
CHANGE COLUMN `SampleCount` `SampleAmount`  decimal(10,4) NOT NULL DEFAULT 0.0000 AFTER `SamplerName`;

ALTER TABLE `labrecords`
ADD COLUMN `conclusion`  tinyint NOT NULL DEFAULT 1 AFTER `WarrantorName`;

ALTER TABLE `labrecords`
ADD COLUMN `supplyer`  varchar(100) NOT NULL DEFAULT '' AFTER `producer`;

ALTER TABLE `relativepictures`
CHANGE COLUMN `CreateTime` `CreateDate`  date NOT NULL DEFAULT '0000-00-00 00:00:00' AFTER `CreatorName`;

ALTER TABLE `originalcheckpaper`
CHANGE COLUMN `CreateTime` `CreateDate`  date NOT NULL AFTER `CreatorName`;

ALTER TABLE `originalcheckpapersetting`
CHANGE COLUMN `CreateTime` `CreateDate`  date NOT NULL AFTER `CreatorName`;


ALTER TABLE `labrecordsdetail`
MODIFY COLUMN `Result`  tinyint NOT NULL AFTER `ExprRemark`;

ALTER TABLE `producingplan`
CHANGE COLUMN `PlanTime` `PlanDate`  date NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '�ƻ����ڣ��ƶ�����' AFTER `PlanAmount`,
MODIFY COLUMN `InstructorID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '�ƶ���id' AFTER `LabelImgID`,
MODIFY COLUMN `InstructorName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '�ƶ���name' AFTER `InstructorID`,
MODIFY COLUMN `QAAuditorID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT 'QA������id' AFTER `InstructorName`,
MODIFY COLUMN `QAAuditorName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT 'QA������name' AFTER `QAAuditorID`,
MODIFY COLUMN `QADate`  date NOT NULL DEFAULT '0000-00-00' COMMENT 'QA��������' AFTER `QAAuditorName`,
MODIFY COLUMN `WarrantorID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '��׼��id' AFTER `QADate`,
MODIFY COLUMN `WarrantorName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '��׼��name' AFTER `WarrantorID`,
MODIFY COLUMN `WarrantDate`  date NOT NULL DEFAULT '0000-00-00' COMMENT '��׼����' AFTER `WarrantorName`,
MODIFY COLUMN `ExecutorID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT 'ִ����id' AFTER `ProdStatus`,
MODIFY COLUMN `ExecutorName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT 'ִ����name' AFTER `ExecutorID`,
CHANGE COLUMN `ExecuteTime` `ExecuteDate`  date NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'ִ������' AFTER `ExecutorName`,
MODIFY COLUMN `bpConstitutorID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '��װ�ƶ���id' AFTER `ExpiredDates`,
MODIFY COLUMN `bpConstitutorName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '��װ�ƶ�name' AFTER `bpConstitutorID`,
MODIFY COLUMN `bpCOnsDate`  date NOT NULL DEFAULT '0000-00-00' COMMENT '��װ�ƶ�����' AFTER `bpConstitutorName`,
MODIFY COLUMN `bpQAID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '��װQA������id' AFTER `bpCOnsDate`,
MODIFY COLUMN `bpQAName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '��װQA������name' AFTER `bpQAID`,
MODIFY COLUMN `bpQADate`  date NOT NULL DEFAULT '0000-00-00' COMMENT '��װQA��������' AFTER `bpQAName`,
MODIFY COLUMN `bpWarrantorID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '��װ��׼��id' AFTER `bpQADate`,
MODIFY COLUMN `bpWarrantorName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '��װ��׼��name' AFTER `bpWarrantorID`,
MODIFY COLUMN `bpWarrantDate`  date NOT NULL DEFAULT '0000-00-00' COMMENT '��װ��׼����' AFTER `bpWarrantorName`,
MODIFY COLUMN `bpDate`  date NOT NULL DEFAULT '0000-00-00' COMMENT '��װ����' AFTER `bpWarrantDate`,
MODIFY COLUMN `bpExecutorID`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '��װִ����id' AFTER `plType`,
MODIFY COLUMN `bpExecutorName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' COMMENT '��װִ����name' AFTER `bpExecutorID`,
CHANGE COLUMN `bpExecuteTime` `bpExecuteDate`  date NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '��װִ������' AFTER `bpExecutorName`;

ALTER TABLE `producingplan`
CHANGE COLUMN `bpCOnsDate` `bpConsDate`  date NOT NULL DEFAULT '0000-00-00' COMMENT '��װ�ƶ�����' AFTER `bpConstitutorName`;

ALTER TABLE `oddmentdrawnotes`
MODIFY COLUMN `autoid`  int(11) NOT NULL AUTO_INCREMENT FIRST ;

ALTER TABLE `oddmentdrawnotes`
MODIFY COLUMN `dppID`  int(11) NOT NULL DEFAULT 0 AFTER `flag`,
MODIFY COLUMN `WarehouseID`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `dppID`,
MODIFY COLUMN `WarehouseName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `WarehouseID`;
MODIFY COLUMN `RegDate`  date NOT NULL  AFTER `WarehouseName`;


ALTER TABLE `oddmentdrawnotes`
CHANGE COLUMN `ChargerID` `registerid`  varchar(10) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `DrawerName`,
CHANGE COLUMN `ChargerName` `registername`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `registerid`;
ADD COLUMN `unit`  varchar(10) NOT NULL DEFAULT '' AFTER `amount`,
MODIFY COLUMN `status`  int(11) NOT NULL DEFAULT 0 AFTER `MakeDate`;
MODIFY COLUMN `flag`  tinyint(4) NOT NULL DEFAULT 0 AFTER `WarehousemanName`;
MODIFY COLUMN `dppID`  int(11) NOT NULL DEFAULT 0 AFTER `flag`;
MODIFY COLUMN `WarehouseID`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `dppID`,
MODIFY COLUMN `WarehouseName`  varchar(30) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `WarehouseID`,
MODIFY COLUMN `RegDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `WarehouseName`;
ADD COLUMN `inValidDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `RegDate`;
ADD COLUMN `QADate`  date NOT NULL DEFAULT '0000-00-00' AFTER `QAName`,
ADD COLUMN `WarehouseDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `WarehousemanName`;




update oddmentdrawnotes as od, producingplan as pp set od.unit = pp.spunit where od.amount>=1 and od.ppid = pp.autoid;
update oddmentdrawnotes as od, producingplan as pp set od.amount = od.amount*pp.basicamount and od.unit = pp.basicunit where od.amount<1 and od.ppid = pp.autoid;


delimiter $$
CREATE EVENT `updatedata`
ON SCHEDULE EVERY 1 DAY
ON COMPLETION NOT PRESERVE
ENABLE
DO
begin
update oddmentdrawnotes set flag = 4 where invaliddate < NOW() and flag=0;
update stuffrepository set status =if(expireddate < now(),3,if(DATE_SUB(expireddate,INTERVAL 1 MONTH)<now(), 2, if(nextcheckdate  < NOW(),1,0)))  where amount >0 and status<3;
end$$
delimiter ;

ALTER TABLE `productputinnotes`
MODIFY COLUMN `piAmount`  int(11) NOT NULL DEFAULT 0 AFTER `dpAmount`;
MODIFY COLUMN `Oddment`  int(11) NOT NULL DEFAULT 0.000 AFTER `UnitType`;


ALTER TABLE `productrepository`
DROP COLUMN `bpUnit`,
DROP COLUMN `mpUnit`,
DROP COLUMN `spAmount`,
DROP COLUMN `mpAmount`,
DROP COLUMN `BasicAmount`,
DROP COLUMN `BasicUnit`,
DROP COLUMN `spPrice`,
DROP COLUMN `WorkShopID`,
DROP COLUMN `WorkShopName`,
DROP COLUMN `InputCode`,
DROP COLUMN `chkPaperNo`,
DROP COLUMN `flag`,
DROP COLUMN `hxBatchNo`,
DROP COLUMN `hxMakeDate`,
DROP COLUMN `bpAmount`,
DROP COLUMN `DayKind`,
DROP COLUMN `hxbatchno`,
DROP COLUMN `hxbpStockAmount`;

MODIFY COLUMN `ppID`  int(11) NOT NULL DEFAULT 0 AFTER `autoid`,
MODIFY COLUMN `hpUnit`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `DeptName`,
ADD COLUMN `hxid`  int NOT NULL DEFAULT 0 AFTER `piSource`,
ADD COLUMN `hxbatchno`  varchar(100) NOT NULL AFTER `hxid`;
ADD COLUMN `Package`  varchar(60) NOT NULL AFTER `Spec`;
CHANGE COLUMN `ExpiredDates` `ExpiredDate`  date NOT NULL AFTER `MakeDate`;
DROP INDEX `pp`,
DROP INDEX `InputCode`,
AUTO_INCREMENT=291;

DELIMITER $$
create PROCEDURE `addprodrep`(intype int, id int, amount decimal, hxid int, bpamount decimal)
begin
if intype in (0, 1, 3) then
	insert into productrepository (ppid,position,indate,pisource,piamount,stockamount,WarehousemanID,WarehousemanName,DeptID,DeptName) 
		select ppid,position,pidate,intype,amount,amount,WarehousemanID,WarehousemanName,WarehouseID,WarehouseName from productputinnotes where ppid=id;
elseif intype = 2 then
	insert into productrepository (ppid,hxid,position,indate,pisource,piamount,stockamount,hxamount,hxstockamount,WarehousemanID,WarehousemanName,DeptID,DeptName)
		select id,hxid,position,pidate,intype,amount,amount,bpamount,bpamount,WarehousemanID,WarehouseID,DeptID,WarehouseName from productputinnotes where ppid=id;
end if;
end;
DELIMITER $$

DROP PROCEDURE IF EXISTS `addprodrep`;

CREATE DEFINER = `root`@`localhost` PROCEDURE `addprodrep`(IN `intype` tinyint,IN `id` int,IN `amount` decimal,IN `bpid` int,`bpamount` decimal)
BEGIN
	#Routine body goes here...
if intype in (0, 1, 3) then
	insert into productrepository (prodid,prodname,commonname,allowno,spec,package,spunit,batchno,expireddate,ppid,position,indate,pisource,piamount,stockamount,WarehousemanID,WarehousemanName,DeptID,DeptName) 
		select pp.prodid,pp.prodname,pp.commonname,pp.allowno,pp.spec,pp.package,pp.spunit,pp.batchno,DATE_ADD(pp.MakeDate,INTERVAL pp.ExpiredDates DAY),pi.ppid,pi.position,pi.pidate,intype,amount,amount,pi.WarehousemanID,pi.WarehousemanName,pi.WarehouseID,pi.WarehouseName from productputinnotes as pi,producingplan as pp where pi.ppid=id and pi.ppID=pp.autoid;
elseif intype = 2 then
	insert into productrepository (prodid,prodname,commonname,allowno,spec,package,spunit,batchno,expireddate,ppid,hxid,position,indate,pisource,piamount,stockamount,hxamount,hxstockamount,WarehousemanID,WarehousemanName,DeptID,DeptName) 
		select pp.prodid,pp.prodname,pp.commonname,pp.allowno,pp.spec,pp.package,pp.spunit,pp.batchno,DATE_ADD(pp.MakeDate,INTERVAL pp.ExpiredDates DAY),id,bpid,pi.position,pi.pidate,intype,amount,amount,bpamount,bpamount,pi.WarehousemanID,pi.WarehouseID,pi.WarehouseID,pi.WarehouseName from productputinnotes as pi,producingplan as pp  where ppid=id and pi.ppID=pp.autoid;
end if;
END;





ALTER TABLE `prodqrcode`
MODIFY COLUMN `QRCode3`  varchar(200) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL AFTER `QRCode2`;

ALTER TABLE `producingplan`
ADD COLUMN `qrtype`  tinyint NOT NULL DEFAULT 0 AFTER `ProductGist`;

ALTER TABLE `prodqrcode`
MODIFY COLUMN `Used`  tinyint(4) NOT NULL DEFAULT 0 AFTER `BatchNo`,
MODIFY COLUMN `flag`  int(11) NOT NULL DEFAULT 0 AFTER `Used`,
MODIFY COLUMN `bflag`  tinyint(4) NOT NULL DEFAULT 0 AFTER `flag`;

ALTER TABLE `qrcoderepository`
CHANGE COLUMN `CreateTime` `CreateDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `Used`,
CHANGE COLUMN `UsedTime` `UsedDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `CreateDate`;


ALTER TABLE `producingplan`
ADD COLUMN `qrflag`  tinyint NOT NULL DEFAULT 0 AFTER `ProdStatus`;

# ��productputinnotes���qrflag�ĵ�producingplan��
update producingplan as pp, productputinnotes as pi set pp.qrflag = pi.qrflag where pp.autoid = pi.ppid��


ALTER TABLE `ppopqrcode`
ADD COLUMN `ppopid`  int(11) NOT NULL DEFAULT 0 AFTER `autoid`;
CHANGE COLUMN `ppodID` `batchno`  varchar(20) NOT NULL DEFAULT '' AFTER `autoid`;ALTER TABLE `pwqrcode`
ADD COLUMN `ppid`  int NOT NULL DEFAULT 0 AFTER `ppopid`;
ADD COLUMN `batchno`  varchar(20) NOT NULL DEFAULT '' AFTER `ppid`;
ADD COLUMN `kind`  tinyint NOT NULL DEFAULT 0 AFTER `flag`;
ADD COLUMN  `amount`  int(11) NOT NULL DEFAULT 0 AFTER `kind`  ;

ALTER TABLE `purchasingplan`
MODIFY COLUMN `autoid`  int(11) NOT NULL AUTO_INCREMENT FIRST ,
CHANGE COLUMN `CreateTime` `CreateDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `PaperNo`;


ALTER TABLE `productputoutpaper`
DROP COLUMN `ExecTime`,
CHANGE COLUMN `CreateTime` `CreateDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `autoid`,
CHANGE COLUMN `PutOutTime` `PutOutDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `ClientName`;


ALTER TABLE `productwithdrawnotes`
CHANGE COLUMN `CreateTime` `CreateDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `CreatorName`;


ALTER TABLE `purchasingplan`
MODIFY COLUMN `autoid`  int(11) NOT NULL AUTO_INCREMENT FIRST ,
CHANGE COLUMN `CreateTime` `CreateDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `PaperNo`;
MODIFY COLUMN `status`  tinyint(4) NOT NULL DEFAULT 0 AFTER `WarrantorName`;



ALTER TABLE `pplist`
ADD COLUMN `ppid`  int NOT NULL DEFAULT 0 AFTER `autoid`;
ADD COLUMN `package`  varchar(60) NOT NULL DEFAULT '' AFTER `Spec`;
MODIFY COLUMN `ArrivedAmount`  decimal(10,3) NOT NULL DEFAULT 0 AFTER `Price`,
MODIFY COLUMN `iPosID`  int(11) NOT NULL DEFAULT 0 AFTER `ArrivedAmount`;
CHANGE COLUMN `iPosID` `ExpiredDays`  int(11) NOT NULL DEFAULT 365 AFTER `ArrivedAmount`;


update pplist as pp, purchasingplan as pl set pp.ppid = pl.autoid where pp.PaperNo=pl.PaperNo;

UPDATE purchasingplan as pp, supplyer as sp set pp.spid = sp.autoid where pp.SupID = sp.SupID;


ALTER TABLE `stuffcheckinlist`
DROP COLUMN `AllowNo`,
DROP COLUMN `BasicUnit`,
DROP COLUMN `BasicAmount`,
CHANGE COLUMN `piTime` `piDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `piAmount`,
MODIFY COLUMN `status`  int(11) NOT NULL DEFAULT 0 AFTER `content`,
CHANGE COLUMN `CheckInTime` `CheckInDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `status`,
MODIFY COLUMN `pplID`  int(11) NOT NULL DEFAULT 0 AFTER `srID`,
MODIFY COLUMN `lrID`  int(11) NOT NULL DEFAULT 0 AFTER `pplID`,
MODIFY COLUMN `impurity`  decimal(8,2) NOT NULL DEFAULT 0 AFTER `rDensity`,
MODIFY COLUMN `mBatchNo`  varchar(100) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `impurity`;

ALTER TABLE `stuffcheckin`
MODIFY COLUMN `autoid`  int(11) NOT NULL AUTO_INCREMENT FIRST ,
CHANGE COLUMN `CreateTime` `CreateDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `ppPaperNo`,
MODIFY COLUMN `status`  int(11) NOT NULL DEFAULT 0 AFTER `PaperType`;

ALTER TABLE `labrecords`
CHANGE COLUMN `CreateTime` `CreateDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `ciID`;

CREATE TRIGGER `updatelabrecord` AFTER UPDATE ON `labrecords`
FOR EACH ROW if new.labtype = 0 and new.status in (1,2,3,4)
then
    update stuffcheckinlist set status = new.status where autoid = new.ciid;
end if;;

ALTER TABLE `labrecords`
MODIFY COLUMN `conclusion`  tinyint(4) NOT NULL DEFAULT 2 AFTER `WarrantorName`;

ALTER TABLE `stuffrepository`
CHANGE COLUMN `CheckInTime` `CheckInDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `BasicAmount`,
CHANGE COLUMN `PutinTime` `PutinDate`  date NOT NULL DEFAULT '0000-00-00' AFTER `CheckInDate`;

ALTER TABLE `labrecordsdetail`
ADD COLUMN `PutInType`  tinyint NOT NULL DEFAULT 0 AFTER `CheckerName`;

ALTER TABLE `stuffcheckinlist`
MODIFY COLUMN `mBatchNo`  varchar(100) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `BatchNo`,
MODIFY COLUMN `content`  decimal(8,2) NOT NULL DEFAULT 100.00 AFTER `position`,
MODIFY COLUMN `rDensity`  decimal(12,4) NOT NULL DEFAULT 1.0000 AFTER `water`,
MODIFY COLUMN `impurity`  decimal(8,2) NOT NULL DEFAULT 0.00 AFTER `rDensity`,
ADD COLUMN `cUnit`  varchar(20) NULL DEFAULT '' AFTER `content`;

ALTER TABLE `stuffrepository`
MODIFY COLUMN `mBatchNo`  varchar(100) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL AFTER `BatchNo`,
MODIFY COLUMN `Content`  decimal(8,2) NOT NULL DEFAULT 100.00 AFTER `WarehousemanName`,
MODIFY COLUMN `cUnit`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL AFTER `Content`,
MODIFY COLUMN `rDensity`  decimal(12,4) NOT NULL COMMENT '����ܶ�' AFTER `Water`,
MODIFY COLUMN `impurity`  decimal(8,2) NOT NULL COMMENT '����' AFTER `rDensity`;

delimiter $$
drop TRIGGER if exists updatepaperstatus$$
CREATE TRIGGER `updatepaperstatus` AFTER UPDATE ON `stuffcheckinlist` FOR EACH ROW 
begin
declare done,stuffstatus,ppno int default 0;
declare newstatus bool default true;
declare nextamount decimal(10,3);
declare stuffliststatus cursor for select status from stuffcheckinlist where paperno=new.paperno and papertype=0;
declare ppliststatus cursor for select amount-arrivedamount as amount from pplist where paperno=ppno;
declare continue handler for not found set done=1;
if new.status>=5 and new.papertype=0
then
    update pplist as pp,stuffcheckin as si set pp.arrivedamount = pp.arrivedamount + new.piamount where 
        pp.stuffid=new.stuffid and pp.paperno=si.pppaperno and si.papertype=0 and si.paperno=new.paperno;
    set newstatus = true;
    set done = 0;
    open stuffliststatus;
    checkstatus:loop
        fetch stuffliststatus into stuffstatus;
        if done = 1 
        then
            leave checkstatus;
        end if;
        if stuffstatus <5
        then
            set newstatus = false;
            leave checkstatus;
        end if;
    end loop checkstatus;
    close stuffliststatus;
    if newstatus = true
    then
        update stuffcheckin set status = 1 where papertype=0 and paperno=new.paperno;
        set ppno = (select pppaperno from stuffcheckin where paperno=new.paperno and papertype=0);
        open  ppliststatus;
        set done = 0;
        set newstatus = true;
        pplist:loop
            fetch ppliststatus into nextamount;
            if done = 1 
            then 
                leave pplist;
            end if;
            if nextamount>0
            then
                set newstatus=false;
                leave pplist;
            end if;
        end loop pplist;
        close ppliststatus;
        if newstatus = true
        then
            update purchasingplan set status = 2 where paperno = ppno;
        end if;
    end if;
end if;
end$$
delimiter ;


ALTER TABLE `stuffrepository`
MODIFY COLUMN `SupId`  varchar(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' AFTER `Producer`,
ADD COLUMN `SupName`  varchar(60) NOT NULL DEFAULT '' AFTER `SupId`;


ALTER TABLE `salesnotes`
ADD COLUMN `paperno`  varchar(20) NOT NULL DEFAULT '' AFTER `autoid`;

ALTER TABLE `salesnotesgoods`
MODIFY COLUMN `snID`  int(11) NOT NULL DEFAULT 0 AFTER `autoid`;
ADD COLUMN `package`  varchar(200) NOT NULL AFTER `spec`;

ALTER TABLE `salesnotes`
ADD COLUMN `linkman`  varchar(30) NOT NULL AFTER `ClientName`,
ADD COLUMN `telno`  varchar(100) NOT NULL AFTER `linkman`;

ALTER TABLE `productputoutpaper`
MODIFY COLUMN `snID`  int(11) NOT NULL AFTER `autoid`,
ADD COLUMN `snpaperno`  varchar(20) NOT NULL DEFAULT '' AFTER `snID`;

